-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-10-28 14:08:21 CET
--   site:      Oracle Database 11g
--   type:      Oracle Database 11g



-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE applications (
    applicationid INTEGER NOT NULL,
    userid        INTEGER NOT NULL,
    positionid    INTEGER NOT NULL,
    status        NVARCHAR2(55) NOT NULL,
    submittedat   TIMESTAMP NOT NULL
);

CREATE UNIQUE INDEX applications__idx ON
    applications (
        userid
    ASC );

ALTER TABLE applications ADD CONSTRAINT applications_pk PRIMARY KEY ( applicationid );

CREATE TABLE attachments_firebase 
    
    -- No Columns 


CREATE TABLE benefits (
    benefitid   INTEGER NOT NULL,
    name        NVARCHAR2(255) NOT NULL,
    description NVARCHAR2(1) NOT NULL,
    isactive    CHAR(1) NOT NULL
);

ALTER TABLE benefits ADD CONSTRAINT benefits_pk PRIMARY KEY ( benefitid );

CREATE TABLE contractbenefits (
    contracts_contractid INTEGER NOT NULL,
    benefits_benefitid   INTEGER NOT NULL
);

CREATE TABLE contracts (
    contractid    INTEGER NOT NULL,
    userid        INTEGER NOT NULL,
    jobpositionid INTEGER NOT NULL,
    contracttype  NVARCHAR2(50) NOT NULL,
    startdate     TIMESTAMP NOT NULL,
    enddate       TIMESTAMP NOT NULL,
    salary        NUMBER NOT NULL,
    hoursperweek  INTEGER NOT NULL,
    noticeperiod  NVARCHAR2(1) NOT NULL,
    isactive      CHAR(1) NOT NULL
);

CREATE UNIQUE INDEX contracts__idx ON
    contracts (
        userid
    ASC );

ALTER TABLE contracts ADD CONSTRAINT contracts_pk PRIMARY KEY ( contractid );

CREATE TABLE employeejobpositions (
    employeejobpositionid INTEGER NOT NULL,
    userid                INTEGER NOT NULL,
    jobpositionid         INTEGER NOT NULL,
    startdate             TIMESTAMP NOT NULL,
    enddate               TIMESTAMP
);

CREATE UNIQUE INDEX employeejobpositions__idx ON
    employeejobpositions (
        userid
    ASC );

ALTER TABLE employeejobpositions ADD CONSTRAINT employeejobpositions_pk PRIMARY KEY ( employeejobpositionid );

CREATE TABLE jobpositions (
    jobpositionid INTEGER NOT NULL,
    title         NVARCHAR2(255) NOT NULL,
    description   NVARCHAR2(255) NOT NULL,
    "Level"       NVARCHAR2(50) NOT NULL
);

ALTER TABLE jobpositions ADD CONSTRAINT jobpositions_pk PRIMARY KEY ( jobpositionid );

CREATE TABLE leaverequest (
    leaverequestid INTEGER NOT NULL,
    userid         INTEGER NOT NULL,
    leavetype      NVARCHAR2(50) NOT NULL,
    startdate      TIMESTAMP NOT NULL,
    enddate        TIMESTAMP NOT NULL,
    status         NVARCHAR2(50) NOT NULL
);

ALTER TABLE leaverequest ADD CONSTRAINT leaverequest_pk PRIMARY KEY ( leaverequestid );

CREATE TABLE loginhistory (
    loginid      INTEGER NOT NULL,
    users_userid INTEGER NOT NULL,
    logintime    TIMESTAMP NOT NULL,
    ipaddress    NVARCHAR2(45) NOT NULL,
    issuccessful CHAR(1) NOT NULL,
    userid       INTEGER NOT NULL
);

ALTER TABLE loginhistory ADD CONSTRAINT loginhistory_pk PRIMARY KEY ( loginid );

CREATE TABLE passwordrecovery 
    
    -- No Columns 


CREATE TABLE perfomancereviews 
    
    -- No Columns 


CREATE TABLE recruitmentpositions (
    positionid  INTEGER NOT NULL,
    title       NVARCHAR2(255) NOT NULL,
    description NVARCHAR2(255) NOT NULL,
    isactive    CHAR(1) NOT NULL
);

ALTER TABLE recruitmentpositions ADD CONSTRAINT recruitmentpositions_pk PRIMARY KEY ( positionid );

CREATE TABLE roles (
    roleid      INTEGER NOT NULL,
    rolename    NVARCHAR2(50) NOT NULL,
    description NVARCHAR2(255) NOT NULL
);

ALTER TABLE roles ADD CONSTRAINT roles_pk PRIMARY KEY ( roleid );

CREATE TABLE schedule (
    scheduleid  INTEGER NOT NULL,
    userid      INTEGER NOT NULL,
    starttime   TIMESTAMP NOT NULL,
    endtime     TIMESTAMP NOT NULL,
    type        NVARCHAR2(50) NOT NULL,
    description NVARCHAR2(255) NOT NULL
);

ALTER TABLE schedule ADD CONSTRAINT schedule_pk PRIMARY KEY ( scheduleid );

CREATE TABLE sessions (
    sessionsid   INTEGER NOT NULL,
    userid       INTEGER NOT NULL,
    sessiontoken NVARCHAR2(255) NOT NULL,
    expiresat    TIMESTAMP NOT NULL,
    isactive     CHAR(1) NOT NULL,
    createdat    TIMESTAMP
);

ALTER TABLE sessions ADD CONSTRAINT sessions_pk PRIMARY KEY ( sessionsid );

CREATE TABLE teammembers (
    teammemberid INTEGER NOT NULL,
    userid       INTEGER NOT NULL,
    teamid       INTEGER NOT NULL,
    joinedat     TIMESTAMP NOT NULL,
    leftat       TIMESTAMP
);

ALTER TABLE teammembers ADD CONSTRAINT teammembers_pk PRIMARY KEY ( teammemberid );

CREATE TABLE teams (
    teamid    INTEGER NOT NULL,
    name      NVARCHAR2(255) NOT NULL,
    createdat TIMESTAMP NOT NULL,
    isactive  CHAR(1) NOT NULL
);

ALTER TABLE teams ADD CONSTRAINT teams_pk PRIMARY KEY ( teamid );

CREATE TABLE trainings (
    trainingid  INTEGER NOT NULL,
    title       NVARCHAR2(255) NOT NULL,
    description NVARCHAR2(1) NOT NULL,
    startdate   TIMESTAMP NOT NULL,
    enddate     TIMESTAMP NOT NULL
);

ALTER TABLE trainings ADD CONSTRAINT trainings_pk PRIMARY KEY ( trainingid );

CREATE TABLE userroles (
    userroleid INTEGER NOT NULL,
    userid     INTEGER NOT NULL,
    roleid     INTEGER NOT NULL
);

ALTER TABLE userroles ADD CONSTRAINT userroles_pk PRIMARY KEY ( userroleid );

CREATE TABLE users (
    userid      INTEGER NOT NULL,
    name        NVARCHAR2(100) NOT NULL,
    surname     NVARCHAR2(100) NOT NULL,
    email       NVARCHAR2(255) NOT NULL,
    phonenumber NVARCHAR2(15) NOT NULL,
    password    NVARCHAR2(1) NOT NULL,
    createdat   TIMESTAMP NOT NULL,
    updatedat   TIMESTAMP NOT NULL,
    isactive    CHAR(1) NOT NULL
);

ALTER TABLE users ADD CONSTRAINT users_pk PRIMARY KEY ( userid );

ALTER TABLE users ADD CONSTRAINT users_email_un UNIQUE ( email );

CREATE TABLE usertrainingprogress (
    usertrainingid INTEGER NOT NULL,
    userid         INTEGER NOT NULL,
    trainingid     INTEGER NOT NULL,
    progress       NUMBER NOT NULL,
    lastupdated    TIMESTAMP NOT NULL
);

ALTER TABLE usertrainingprogress ADD CONSTRAINT usertrainingprogress_pk PRIMARY KEY ( usertrainingid );

ALTER TABLE applications
    ADD CONSTRAINT applications_recruitmentpos_fk FOREIGN KEY ( positionid )
        REFERENCES recruitmentpositions ( positionid );

ALTER TABLE applications
    ADD CONSTRAINT applications_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );

ALTER TABLE contractbenefits
    ADD CONSTRAINT contractbenefits_benefits_fk FOREIGN KEY ( benefits_benefitid )
        REFERENCES benefits ( benefitid );

ALTER TABLE contractbenefits
    ADD CONSTRAINT contractbenefits_contracts_fk FOREIGN KEY ( contracts_contractid )
        REFERENCES contracts ( contractid );

ALTER TABLE contracts
    ADD CONSTRAINT contracts_jobpositions_fk FOREIGN KEY ( jobpositionid )
        REFERENCES jobpositions ( jobpositionid );

ALTER TABLE contracts
    ADD CONSTRAINT contracts_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE;

ALTER TABLE employeejobpositions
    ADD CONSTRAINT employeejobpositions_jobpos_fk FOREIGN KEY ( jobpositionid )
        REFERENCES jobpositions ( jobpositionid );

ALTER TABLE employeejobpositions
    ADD CONSTRAINT employeejobpositions_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );

ALTER TABLE leaverequest
    ADD CONSTRAINT leaverequest_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );

ALTER TABLE loginhistory
    ADD CONSTRAINT loginhistory_users_fk FOREIGN KEY ( users_userid )
        REFERENCES users ( userid );

ALTER TABLE schedule
    ADD CONSTRAINT schedule_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE;

ALTER TABLE sessions
    ADD CONSTRAINT sessions_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );

ALTER TABLE teammembers
    ADD CONSTRAINT teammembers_teams_fk FOREIGN KEY ( teamid )
        REFERENCES teams ( teamid );

ALTER TABLE teammembers
    ADD CONSTRAINT teammembers_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );

ALTER TABLE userroles
    ADD CONSTRAINT userroles_roles_fk FOREIGN KEY ( roleid )
        REFERENCES roles ( roleid )
            ON DELETE CASCADE;

ALTER TABLE userroles
    ADD CONSTRAINT userroles_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid )
            ON DELETE CASCADE;

--  ERROR: FK name length exceeds maximum allowed length(30) 
ALTER TABLE usertrainingprogress
    ADD CONSTRAINT usertrainingprogress_trainings_fk FOREIGN KEY ( trainingid )
        REFERENCES trainings ( trainingid );

ALTER TABLE usertrainingprogress
    ADD CONSTRAINT usertrainingprogress_users_fk FOREIGN KEY ( userid )
        REFERENCES users ( userid );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            21
-- CREATE INDEX                             3
-- ALTER TABLE                             36
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   1
-- WARNINGS                                 0
